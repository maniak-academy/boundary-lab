#!/bin/bash
set -e
set -v

until [ -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    sleep 1
done
echo "source /usr/share/bash-completion/bash_completion" >> /root/.bashrc

VAULT_VERSION=1.12.0
TERRAFORM_VERSION=1.3.3
BOUNDARY_VERSION=0.11.2
BOUNDARY_WORKER_VERSION=0.11.2

# Install Vault
curl -fsSL -o /tmp/vault.zip "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip"
unzip -o -d /usr/local/bin/ /tmp/vault.zip

# Install Terraform
curl -fsSL -o /tmp/terraform.zip "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
unzip -o -d /usr/local/bin/ /tmp/terraform.zip

# Install Boundary
curl -fsSL -o /tmp/boundary.zip "https://releases.hashicorp.com/boundary/${BOUNDARY_VERSION}/boundary_${BOUNDARY_VERSION}_linux_amd64.zip"
unzip -o -d /usr/local/bin/ /tmp/boundary.zip

# Install Boundary Worker
curl -fsSL -o /tmp/boundary-worker.zip "https://releases.hashicorp.com/boundary-worker/${BOUNDARY_WORKER_VERSION}+hcp/boundary-worker_${BOUNDARY_WORKER_VERSION}+hcp_linux_amd64.zip"
unzip -o -d /usr/local/bin/ /tmp/boundary-worker.zip

cd /tmp
git clone https://github.com/Andrew-Klaas/boundary-lab.git

# Copy additional files.
cp boundary-lab/assets/systemd-files/vault.service /etc/systemd/system/vault.service
cp boundary-lab/assets/systemd-files/boundary-controller.service /etc/systemd/system/boundary-controller.service
cp boundary-lab/assets/systemd-files/boundary-worker.service /etc/systemd/system/boundary-worker.service
cp boundary-lab/assets/systemd-files/boundary.service /etc/systemd/system/boundary.service

cp -r boundary-lab/assets/terraform-boundary /root/

mkdir /etc/vault.d
mkdir /etc/boundary.d
mkdir /tmp/vault
mkdir /tmp/boundary

systemctl daemon-reload
systemctl enable vault.service
systemctl enable boundary-controller.service
systemctl enable boundary-worker.service

####################################
# Configure Boundary Server
####################################

local_ipv4=$(hostname -I | awk '{print $1}')

cat << EOF > /etc/boundary.d/pki-worker.hcl
disable_mlock = true

hcp_boundary_cluster_id = "REPLACE_ME"

listener "tcp" {
  address = "0.0.0.0:9202"
  purpose = "proxy"
}

worker {
  controller_generated_activation_token = "REPLACE_ME"
  public_addr = "${local_ipv4}"
  auth_storage_path = "/etc/boundary.d/"
  tags {
    type = ["worker", "dev", "vault"]
  }
}
EOF

#user will need to grab token from the file. /etc/boundary.d/auth_storage_token
#start Boundary worker
systemctl start boundary-worker

# boundary-worker server -config="/home/ubuntu/boundary/pki-worker.hcl"

echo "Boundary worker install complete" >> /tmp/install.log

######################################
# install psql for any testing
######################################
sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
apt-get -y update
sudo apt-get -y install postgresql

echo "PSQL install complete" >> /tmp/install.log
exit 0



vault token create -no-default-policy=true -policy="vault_admin" -orphan=true -period=20m -renewable=false -format=json | jq -r .auth.client_token
